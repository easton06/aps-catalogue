---
const { sheet } = Astro.props;
const response = await fetch(`http://localhost:5555/aps/${sheet}`);
const data = await response.json();

var rowspans: number[][] = [];

for(let i = 0; i < data.value[0].length; i++) { //working through columns
	let span: number[] = [];
	let row = 1;
	for(let j = data.value.length - 1; j >= 0; j--) { // counting through rows
		span = [row, ...span];
		if(data.value[j][i] === undefined || data.value[j][i] === null) {
			row++
		} else {
			row = 1;
		}
	}
	rowspans.push(span)
}


---

<table class="w-full">
	<tbody>
		{ data.status === "ok"?
		data.value.map((row : (string | null)[], i : number) =>  //row
		<tr>
			{row.map((entry: (string | null), j) => //column
					entry !== null ?
					<td class={`${i === 0 ?  "bg-slate-900 text-white" : "bg-white"} text-center border border-slate-100`} rowspan={`${rowspans[j][i]}`}>
						{entry}
					</td> : <></>)
				}
				</tr>)
				: <div>Error: {data.value}</div>
			}
	</tbody>
</table>