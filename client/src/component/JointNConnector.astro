---
import Image from "./Image.astro";
import Table from "./Table.astro";

const fetchedData = await fetch("http://localhost:5555/aps/Joint%20&%20Connector").then(response => response.json())
---

{
  fetchedData.status === "ok"? 
    fetchedData.value.slice(1).map((entry: string[], i : number) => (
      <tr>
        <td class={`break-inside-avoid-page ${i < fetchedData.value.length - 1 ? "pb-1" : ""}`}>
          <div id={entry[0]} class="bg-indigo-800 py-1 px-4 text-white text-lg font-serif border-b-4 border-b-indigo-100">
            <h1>{entry[0]} </h1>
          </div>
          <div class="px-3 py-1 grid grid-cols-2">
            <div class="flex content-start flex-wrap gap-1">
                {entry[3].split(", ").map((img : string, i : number) => 
                <Image entry={img} width={i === 0 && entry[3].split(", ").length % 2 === 1? 67.3 : undefined} />
              )}
            </div>
            <div class="p-1">
              <Table sheet={entry[0]} />
              <div class="p-1">
                <p class="py-0.5">
                  <span class="flex flex-wrap items-center">
                      Material: {entry[2].split(", ").map((s: string) => (
                        <span class={`mx-[0.5rem] p-[0.5rem] rounded-full ${s.startsWith("Nickel Plated Steel") || s === "Stainless Steel"? "bg-[#eae1da]" : s.startsWith("Zinc Plated Steel") || s === "Die Cast Zinc" ? "bg-[#e2e3ee]" : s === "Zinc Yellow Plated Steel"? "bg-[#fcc836]" :"text-white bg-slate-400"} flex-shrink-0`}>
                          {s}
                        </span>
                      ))} 
                  </span>
                </p>
                { 
                  entry[1] !== null ? 
                    entry[1].split("\n").map((s: string) => (
                    <p class="pb-0.5">
                        {s}
                    </p>
                    ))
                  :
                  <> </>
                }
              </div>
            </div>
          </div>
          
        </td>
      </tr>
    ))
    : 
    <div>Error: {fetchedData.value}</div>
}